package Dynamic_Programming.G4G;import java.util.Arrays;public class DP_08_Longest_Inc_Subsequence {    static int max_ref;         // stores the LIS    /*   To make use of recursive calls, this function must return two things:    *    1. Length of LIS ending with element arr[n-1]. We use max_end for this purpose    *    2. Overall maximum as the LIS may end with an element before arr[n-1] max_ref is used this purpose.    *    The value of LIS of full array of size n is stored in *max_ref which is our final result    * */    private static int lis(int arr[], int n) {        // base case        if (n == 1)  return 1;        // 'max_end' is length of LIS ending with arr[n-1]        int res, max_end = 1;        /*        *   Recursively get all LIS ending with arr[0], arr[1]... arr[2].        *   If   arr[i-1] is smaller than arr[n-1], and max ending with arr[n-1] needs to be updated, then update i        * */        for (int i = 1; i < n; i++) {            res = lis(arr,i);            if (arr[i-1] < arr[i] && res + 1 > max_end)                max_end = res + 1;        }        // Compare max_end here with the overall max. And update the overall max if needed        if (max_ref < max_end)            max_ref = max_end;        return max_end;    }    // The wrapper function for lis()    private static int TLis(int arr[], int n) {        // The max variable holds the result        max_ref = 1;        lis(arr, n);        return max_ref;    }    /* Overlapping Subproblem     *     * */    private static int list2(int arr[], int n) {        int lisT[] = new int[n];        /* Initialize LIS values for all indexes*/        Arrays.fill(lisT,1);        /* Computer optimized LIS value in bottom up manner */        for (int i = 1; i < n; i++) {            for (int j = 0; j < i; j++) {                if (arr[j] < arr[i] && lisT[i] < lisT[j] + 1)                    lisT[i] = lisT[j] + 1;            }        }        return Arrays.stream(lisT).max().getAsInt();    }    public static void main(String[] args) {        int arr[] = {10,22,9,33,21,50,41,60};        int n = arr.length;        System.out.println("Length of lis 1 is " + TLis(arr,n));        System.out.println("Length of lis 2 is " + list2(arr,n));    }}